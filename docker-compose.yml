version: "3.8"
services:
    reverse-proxy:
        image: traefik:v2.7
        # Enables the web UI and tells Traefik to listen to docker
        ports:
            - "80:80"
            - "443:443"
            - "8080:8080"
        networks:
            - server
        restart: always
        command:
            # UI Dashboard
            - --api.insecure=true
            # Provider
            - --providers.docker=true
            - --providers.docker.exposedbydefault=false # Must enable in container label
            - --providers.file.filename=/dynamic.yaml
            - --providers.docker.network=api
            # Entry Points
            - --entrypoints.server.address=:80
            - --entrypoints.server-secured.address=:443
            # Certificate
            - --certificatesresolvers.myresolver.acme.httpchallenge=true
            - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=server
            - --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
            - --certificatesresolvers.myresolver.acme.email=billyhawkes02@gmail.com
            - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./letsencrypt:/letsencrypt
            - ./dynamic.yaml:/dynamic.yaml
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.api.rule=Host(`admin.revivios.com`)"
            - "traefik.http.routers.api.service=api@internal"

    db:
        container_name: revivios-db
        image: postgres
        networks:
            - data
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: revivios
        volumes:
            - ./pgdata:/var/lib/postgresql/data
        ports:
            - "5432:5432"

    server:
        image: billyhawkes/revivios-server:latest
        container_name: revivios-server
        restart: always
        networks:
            - server
            - data
        build:
            context: .
            dockerfile: ./server/Dockerfile
        depends_on:
            - db
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.revivios-server.loadbalancer.server.port=8000"
            - "traefik.http.routers.server.entrypoints=server"
            - "traefik.http.routers.server.rule=Host(`server.revivios.com`)"
            - "traefik.http.routers.server.middlewares=redirect@file"
            - "traefik.http.routers.server-secured.entrypoints=server-secured"
            - "traefik.http.routers.server-secured.rule=Host(`server.revivios.com`)"
            - "traefik.http.routers.server-secured.tls.certresolver=myresolver"
            - "traefik.http.routers.server-secured.tls=true"

networks:
    server:
        external: true
    data:
        external: false
